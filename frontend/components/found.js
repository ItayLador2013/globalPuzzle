import { TextInput, View, Text, StyleSheet, Image, Pressable, Dimensions, PanResponder, findNodeHandle, Animated, FlatList, ActivityIndicator, ImageBackground, AppState } from "react-native"
import React from "react";
import storage from "../storage";
import AsyncStorage from '@react-native-async-storage/async-storage';
import Hobbies from "./hobbies";
import Flag from 'react-native-flags';
import AntDesign from '@expo/vector-icons/AntDesign';
import Ionicon from "@expo/vector-icons/Ionicons";
import MaterialCommunityIcon from "@expo/vector-icons/MaterialCommunityIcons";
import FontAwsome5 from "@expo/vector-icons/FontAwesome5"
import MaterialIcon from "@expo/vector-icons/MaterialIcons"; 
import Entypo from "@expo/vector-icons/Entypo";
import Octicon from "@expo/vector-icons/Octicons";
import FontAwsome from "@expo/vector-icons/FontAwesome"
import Fontisto from "@expo/vector-icons/Fontisto";
import FontAwesome5 from "@expo/vector-icons/FontAwesome5"
import jobs from "./jobs";
import { SafeAreaView } from "react-native";
import * as Haptics from 'expo-haptics';
import {LinearGradient} from 'expo-linear-gradient';
import MapView from 'react-native-maps';
import {Polyline, Marker} from 'react-native-maps'
import * as Notifications from 'expo-notifications';
import { useIsFocused } from '@react-navigation/native'; 
import profileSet from "./profileSet";
import Profile from "./profile";



Notifications.setNotificationHandler({
    handleNotification: async () => ({
      shouldShowAlert: true,
      shouldPlaySound: false,
      shouldSetBadge: false,
    }),
});


export default Found = ({navigation, route}) => {
    const server = storage.server
    const user = route.params.user
    const token = route.params.token
    const other = route.params.other
    const window = Dimensions.get("window")
    const notificationListener = React.useRef();
    const responseListener = React.useRef();
    const [up, setUp] = React.useState("")
    const appState = React.useRef(AppState.currentState);
    const [appStateVisible, setAppStateVisible] = React.useState(appState.current);

    const [otherProfile, setOtherProfile] = React.useState([])

    const cancelSearch = () => {
        fetch(server + `home/cancelSearch/`, {
            method: "POST",
            headers: {
                "content-type": "application/json",
            },
            body: JSON.stringify({"user":user, "token":token})
        })
        .then(res => res.json())
        .then(res => {
            if(res){
                navigation.navigate("Home") 
            }
        }) 
    }

    const FLAGS = {
        "Afghanistan": "ğŸ‡¦ğŸ‡«",
        "Akrotiri": "ğŸ‡¦ğŸ‡¨",
        "Albania": "ğŸ‡¦ğŸ‡±",
        "Algeria": "ğŸ‡©ğŸ‡¿",
        "American Samoa": "ğŸ‡¦ğŸ‡¸",
        "Andorra": "ğŸ‡¦ğŸ‡©",
        "Angola": "ğŸ‡¦ğŸ‡´",
        "Anguilla": "ğŸ‡¦ğŸ‡®",
        "Antigua and BarbBarbuda": "ğŸ‡¦ğŸ‡¬",
        "Argentina": "ğŸ‡¦ğŸ‡·",
        "Armenia": "ğŸ‡¦ğŸ‡²",
        "Aruba": "ğŸ‡¦ğŸ‡¼",
        "Australia": "ğŸ‡¦ğŸ‡º",
        "Austria": "ğŸ‡¦ğŸ‡¹",
        "Azerbaijan": "ğŸ‡¦ğŸ‡¿",
        "Bahrain": "ğŸ‡§ğŸ‡­",
        "Bangladesh": "ğŸ‡§ğŸ‡©",
        "Barbados": "ğŸ‡§ğŸ‡§",
        "Belarus": "ğŸ‡§ğŸ‡¾",
        "Belgium": "ğŸ‡§ğŸ‡ª",
        "Belize": "ğŸ‡§ğŸ‡¿",
        "Benin": "ğŸ‡§ğŸ‡¯",
        "Bermuda": "ğŸ‡§ğŸ‡²",
        "Bhutan": "ğŸ‡§ğŸ‡¹",
        "Bolivia": "ğŸ‡§ğŸ‡´",
        "Bosnia and Herzegovina": "ğŸ‡§ğŸ‡¦",
        "Botswana": "ğŸ‡§ğŸ‡¼",
        "Brazil": "ğŸ‡§ğŸ‡·",
        "British Indian Ocean Territory": "ğŸ‡®ğŸ‡´",
        "British Virgin Islands": "ğŸ‡»ğŸ‡¬",
        "Brunei": "ğŸ‡§ğŸ‡³",
        "Bulgaria": "ğŸ‡§ğŸ‡¬",
        "Burkina Faso": "ğŸ‡§ğŸ‡«",
        "Burundi": "ğŸ‡§ğŸ‡®",
        "Cabo Verde": "ğŸ‡¨ğŸ‡»",
        "Cambodia": "ğŸ‡°ğŸ‡­",
        "Cameroon": "ğŸ‡¨ğŸ‡²",
        "Canada": "ğŸ‡¨ğŸ‡¦",
        "Cayman Islands": "ğŸ‡°ğŸ‡¾",
        "Central African Republic": "ğŸ‡¨ğŸ‡«",
        "Chad": "ğŸ‡¹ğŸ‡©",
        "Chile": "ğŸ‡¨ğŸ‡±",
        "China": "ğŸ‡¨ğŸ‡³",
        "Christmas Island": "ğŸ‡¨ğŸ‡½",
        "Cocos Islands": "ğŸ‡¨ğŸ‡¨",
        "Colombia": "ğŸ‡¨ğŸ‡´",
        "Comoros": "ğŸ‡°ğŸ‡²",
        "Cook Islands": "ğŸ‡¨ğŸ‡°",
        "Costa Rica": "ğŸ‡¨ğŸ‡·",
        "CÃ´te d'Ivoire": "ğŸ‡¨ğŸ‡®",
        "Croatia": "ğŸ‡­ğŸ‡·",
        "Cuba": "ğŸ‡¨ğŸ‡º",
        "CuraÃ§ao": "ğŸ‡¨ğŸ‡¼",
        "Cyprus": "ğŸ‡¨ğŸ‡¾",
        "Czechia": "ğŸ‡¨ğŸ‡¿",
        "Democratic Republic of the Congo": "ğŸ‡¨ğŸ‡©",
        "Denmark": "ğŸ‡©ğŸ‡°",
        "Dhekelia": "ğŸ‡©ğŸ‡ª",
        "Djibouti": "ğŸ‡©ğŸ‡¯",
        "Dominica": "ğŸ‡©ğŸ‡²",
        "Dominican Republic": "ğŸ‡©ğŸ‡´",
        "Ecuador": "ğŸ‡ªğŸ‡¨",
        "Egypt": "ğŸ‡ªğŸ‡¬",
        "El Salvador": "ğŸ‡¸ğŸ‡»",
        "Equatorial Guinea": "ğŸ‡¬ğŸ‡¶",
        "Eritrea": "ğŸ‡ªğŸ‡·",
        "Estonia": "ğŸ‡ªğŸ‡ª",
        "Ethiopia": "ğŸ‡ªğŸ‡¹",
        "Falkland Islands": "ğŸ‡«ğŸ‡°",
        "Faroe Islands": "ğŸ‡«ğŸ‡´",
        "Federated States of Micronesia": "ğŸ‡«ğŸ‡²",
        "Fiji": "ğŸ‡«ğŸ‡¯",
        "Finland": "ğŸ‡«ğŸ‡®",
        "France": "ğŸ‡«ğŸ‡·",
        "French Guiana": "ğŸ‡¬ğŸ‡«",
        "French Polynesia": "ğŸ‡µğŸ‡«",
        "French Southern And Antarctic Lands": "ğŸ‡¹ğŸ‡«",
        "Gabon": "ğŸ‡¬ğŸ‡¦",
        "Georgia": "ğŸ‡¬ğŸ‡ª",
        "Germany": "ğŸ‡©ğŸ‡ª",
        "Ghana": "ğŸ‡¬ğŸ‡­",
        "Gibraltar": "ğŸ‡¬ğŸ‡®",
        "Greece": "ğŸ‡¬ğŸ‡·",
        "Greenland": "ğŸ‡¬ğŸ‡±",
        "Grenada": "ğŸ‡¬ğŸ‡©",
        "Guadeloupe": "ğŸ‡¬ğŸ‡µ",
        "Guam": "ğŸ‡¬ğŸ‡º",
        "Guatemala": "ğŸ‡¬ğŸ‡¹",
        "Guernsey": "ğŸ‡¬ğŸ‡¬",
        "Guinea": "ğŸ‡¬ğŸ‡³",
        "Guinea-Bissau": "ğŸ‡¬ğŸ‡¼",
        "Guyana": "ğŸ‡¬ğŸ‡¾",
        "Haiti": "ğŸ‡­ğŸ‡¹",
        "Honduras": "ğŸ‡­ğŸ‡³",
        "Hong Kong": "ğŸ‡­ğŸ‡°",
        "Hungary": "ğŸ‡­ğŸ‡º",
        "Iceland": "ğŸ‡®ğŸ‡¸",
        "India": "ğŸ‡®ğŸ‡³",
        "Indonesia": "ğŸ‡®ğŸ‡©",
        "Iran": "ğŸ‡®ğŸ‡·",
        "Iraq": "ğŸ‡®ğŸ‡¶",
        "Ireland": "ğŸ‡®ğŸ‡ª",
        "Isle of Man": "ğŸ‡®ğŸ‡²",
        "Israel": "ğŸ‡®ğŸ‡±",
        "Italy": "ğŸ‡®ğŸ‡¹",
        "Jamaica": "ğŸ‡¯ğŸ‡²",
        "Japan": "ğŸ‡¯ğŸ‡µ",
        "Jersey": "ğŸ‡¯ğŸ‡ª",
        "Jordan": "ğŸ‡¯ğŸ‡´",
        "Kazakhstan": "ğŸ‡°ğŸ‡¿",
        "Kenya": "ğŸ‡°ğŸ‡ª",
        "Kiribati": "ğŸ‡°ğŸ‡®",
        "Kosovo": "ğŸ‡½ğŸ‡°",
        "Kuwait": "ğŸ‡°ğŸ‡¼",
        "Kyrgyzstan": "ğŸ‡°ğŸ‡¬",
        "Laos": "ğŸ‡±ğŸ‡¦",
        "Latvia": "ğŸ‡±ğŸ‡»",
        "Lebanon": "ğŸ‡±ğŸ‡§",
        "Lesotho": "ğŸ‡±ğŸ‡¸",
        "Liberia": "ğŸ‡±ğŸ‡·",
        "Libya": "ğŸ‡±ğŸ‡¾",
        "Liechtenstein": "ğŸ‡±ğŸ‡®",
        "Lithuania": "ğŸ‡±ğŸ‡¹",
        "Luxembourg": "ğŸ‡±ğŸ‡º",
        "Macau": "ğŸ‡²ğŸ‡´",
        "Macedonia": "ğŸ‡²ğŸ‡°",
        "Madagascar": "ğŸ‡²ğŸ‡¬",
        "Malawi": "ğŸ‡²ğŸ‡¼",
        "Malaysia": "ğŸ‡²ğŸ‡¾",
        "Maldives": "ğŸ‡²ğŸ‡»",
        "Mali": "ğŸ‡²ğŸ‡±",
        "Malta": "ğŸ‡²ğŸ‡¹",
        "Marshall Islands": "ğŸ‡²ğŸ‡­",
        "Martinique": "ğŸ‡²ğŸ‡¶",
        "Mauritania": "ğŸ‡²ğŸ‡·",
        "Mauritius": "ğŸ‡²ğŸ‡º",
        "Mayotte": "ğŸ‡¾ğŸ‡¹",
        "Mexico": "ğŸ‡²ğŸ‡½",
        "Moldova": "ğŸ‡²ğŸ‡©",
        "Monaco": "ğŸ‡²ğŸ‡¨",
        "Mongolia": "ğŸ‡²ğŸ‡³",
        "Montenegro": "ğŸ‡²ğŸ‡ª",
        "Montserrat": "ğŸ‡²ğŸ‡¸",
        "Morocco": "ğŸ‡²ğŸ‡¦",
        "Mozambique": "ğŸ‡²ğŸ‡¿",
        "Myanmar": "ğŸ‡²ğŸ‡²",
        "Namibia": "ğŸ‡³ğŸ‡¦",
        "Nauru": "ğŸ‡³ğŸ‡·",
        "Nepal": "ğŸ‡³ğŸ‡µ",
        "Netherlands": "ğŸ‡³ğŸ‡±",
        "New Caledonia": "ğŸ‡³ğŸ‡¨",
        "New Zealand": "ğŸ‡³ğŸ‡¿",
        "Nicaragua": "ğŸ‡³ğŸ‡®",
        "Niger": "ğŸ‡³ğŸ‡ª",
        "Nigeria": "ğŸ‡³ğŸ‡¬",
        "Niue": "ğŸ‡³ğŸ‡º",
        "Norfolk Island": "ğŸ‡³ğŸ‡«",
        "North Korea": "ğŸ‡°ğŸ‡µ",
        "Northern Mariana Islands": "ğŸ‡²ğŸ‡µ",
        "Norway": "ğŸ‡³ğŸ‡´",
        "Oman": "ğŸ‡´ğŸ‡²",
        "Pakistan": "ğŸ‡µğŸ‡°",
        "Palau": "ğŸ‡µğŸ‡¼",
        "Palestine": "ğŸ‡µğŸ‡¸",
        "Panama": "ğŸ‡µğŸ‡¦",
        "Papua New Guinea": "ğŸ‡µğŸ‡¬",
        "Paracel Islands": "ğŸ‡µğŸ‡­",
        "Paraguay": "ğŸ‡µğŸ‡¾",
        "Peru": "ğŸ‡µğŸ‡ª",
        "Philippines": "ğŸ‡µğŸ‡­",
        "Pitcairn Islands": "ğŸ‡µğŸ‡³",
        "Poland": "ğŸ‡µğŸ‡±",
        "Portugal": "ğŸ‡µğŸ‡¹",
        "Puerto Rico": "ğŸ‡µğŸ‡·",
        "Qatar": "ğŸ‡¶ğŸ‡¦",
        "Republic of Congo": "ğŸ‡¨ğŸ‡¬",
        "Reunion": "ğŸ‡·ğŸ‡ª",
        "Romania": "ğŸ‡·ğŸ‡´",
        "Russia": "ğŸ‡·ğŸ‡º",
        "Rwanda": "ğŸ‡·ğŸ‡¼",
        "Saint Barthelemy": "ğŸ‡§ğŸ‡±",
        "Saint Kitts and Nevis": "ğŸ‡°ğŸ‡³",
        "Saint Lucia": "ğŸ‡±ğŸ‡¨",
        "Saint Martin": "ğŸ‡²ğŸ‡«",
        "Saint Pierre and Miquelon": "ğŸ‡µğŸ‡²",
        "Saint Vincent and The Grenadines": "ğŸ‡»ğŸ‡¨",
        "Samoa": "ğŸ‡¼ğŸ‡¸",
        "San Marino": "ğŸ‡¸ğŸ‡²",
        "Sao Tome and Principe": "ğŸ‡¸ğŸ‡¹",
        "Saudi Arabia": "ğŸ‡¸ğŸ‡¦",
        "Senegal": "ğŸ‡¸ğŸ‡³",
        "Serbia": "ğŸ‡·ğŸ‡¸",
        "Seychelles": "ğŸ‡¸ğŸ‡¨",
        "Sierra Leone": "ğŸ‡¸ğŸ‡±",
        "Singapore": "ğŸ‡¸ğŸ‡¬",
        "Sint Maarten": "ğŸ‡¸ğŸ‡½",
        "Slovakia": "ğŸ‡¸ğŸ‡°",
        "Slovenia": "ğŸ‡¸ğŸ‡®",
        "Solomon Islands": "ğŸ‡¸ğŸ‡§",
        "Somalia": "ğŸ‡¸ğŸ‡´",
        "South Africa": "ğŸ‡¿ğŸ‡¦",
        "South Georgia and South Sandwich Islands": "ğŸ‡¬ğŸ‡¸",
        "South Korea": "ğŸ‡°ğŸ‡·",
        "South Sudan": "ğŸ‡¸ğŸ‡¸",
        "Spain": "ğŸ‡ªğŸ‡¸",
        "Spratly Islands": "ğŸ‡»ğŸ‡³",
        "Sri Lanka": "ğŸ‡±ğŸ‡°",
        "Sudan": "ğŸ‡¸ğŸ‡©",
        "Suriname": "ğŸ‡¸ğŸ‡·",
        "Svalbard": "ğŸ‡¸ğŸ‡¯",
        "Swaziland": "ğŸ‡¸ğŸ‡¿",
        "Sweden": "ğŸ‡¸ğŸ‡ª",
        "Switzerland": "ğŸ‡¨ğŸ‡­",
        "Syria": "ğŸ‡¸ğŸ‡¾",
        "Taiwan": "ğŸ‡¹ğŸ‡¼",
        "Tajikistan": "ğŸ‡¹ğŸ‡¯",
        "Tanzania": "ğŸ‡¹ğŸ‡¿",
        "Thailand": "ğŸ‡¹ğŸ‡­",
        "The Bahamas": "ğŸ‡§ğŸ‡¸",
        "The Gambia": "ğŸ‡¬ğŸ‡²",
        "Timor-Leste": "ğŸ‡¹ğŸ‡±",
        "Togo": "ğŸ‡¹ğŸ‡¬",
        "Tokelau": "ğŸ‡¹ğŸ‡°",
        "Tonga": "ğŸ‡¹ğŸ‡´",
        "Trinidad and Tobago": "ğŸ‡¹ğŸ‡¹",
        "Tunisia": "ğŸ‡¹ğŸ‡³",
        "Turkey": "ğŸ‡¹ğŸ‡·",
        "Turkmenistan": "ğŸ‡¹ğŸ‡²",
        "Turks and Caicos Islands": "ğŸ‡¹ğŸ‡¨",
        "Tuvalu": "ğŸ‡¹ğŸ‡»",
        "U.S. Virgin Islands": "ğŸ‡»ğŸ‡®",
        "Uganda": "ğŸ‡ºğŸ‡¬",
        "Ukraine": "ğŸ‡ºğŸ‡¦",
        "United Arab Emirates": "ğŸ‡¦ğŸ‡ª",
        "United Kingdom": "ğŸ‡¬ğŸ‡§",
        "United States": "ğŸ‡ºğŸ‡¸",
        "Uruguay": "ğŸ‡ºğŸ‡¾",
        "Uzbekistan": "ğŸ‡ºğŸ‡¿",
        "Vanuatu": "ğŸ‡»ğŸ‡º",
        "Vatican City": "ğŸ‡»ğŸ‡¦",
        "Venezuela": "ğŸ‡»ğŸ‡ª",
        "Vietnam": "ğŸ‡»ğŸ‡³",
        "Wallis and Futuna": "ğŸ‡¼ğŸ‡«",
        "Yemen": "ğŸ‡¾ğŸ‡ª",
        "Zambia": "ğŸ‡¿ğŸ‡²",
        "Zimbabwe": "ğŸ‡¿ğŸ‡¼",
      }
    
      React.useEffect(() => {
        const subscription = AppState.addEventListener('change', nextAppState => {
          if (
            appState.current.match(/inactive|background/) &&
            nextAppState === 'active'
          ) {
            console.log('App has come to the foreground!');
          }
    
          appState.current = nextAppState;
          setAppStateVisible(appState.current);
          if(appState.current == "background"){
              cancelMatch()
          }
        });
    
        return () => {
          subscription.remove(); 
        }; 
      }, []);

      React.useEffect(() => {

        notificationListener.current = Notifications.addNotificationReceivedListener(notification => {
           
          notif = notification.request.content
          
    
          if(notif.data.type=="matchEnd"){   
            Notifications.setNotificationHandler({
                handleNotification: async () => ({
                  shouldShowAlert: true,
                  shouldPlaySound: false,
                  shouldSetBadge: false,
                }),
              }); 
            cancelMatch()
          } 
          
        });  
      
        responseListener.current = Notifications.addNotificationResponseReceivedListener(response => {
            if(notif.data.type=="matchEnd"){  
                cancelMatch()
            }
        });
    
        return () => {
          Notifications.removeNotificationSubscription(notificationListener.current);
          Notifications.removeNotificationSubscription(responseListener.current);
        };
      }, []);


    const getProfile = (c, t, o) => {
        fetch(server + `home/getProfileOf/`, {    
                method: "POST",
                headers: {
                    "content-type": "application/json",
                }, 
                body: JSON.stringify({"user":c, "token":t, "of":o })  
            })
            .then(res => res.json()) 
            .then(res => {   
                setOtherProfile(res) 

                setTimeout(() => {
                    navigation.navigate("MatchCall", {"user":user, "other":other, "country": res.country, "token":token, "friend":res.friend})
                }, 5000);

            })
    }

    React.useEffect(() => {
        getProfile(user, token, other)
        
    }, [])

    const cancelMatch = () => {
        fetch(server + `home/cancelMatch/`, {
            method: "POST",
            headers: {
                "content-type": "application/json",
            },
            body: JSON.stringify({"user":user, "token": token, "other":other})
        })
        .then(res => res.json())
        .then(res => {
            if(res){
                navigation.navigate("Home")  
            }
        })
    }

    return(
        <View style={{width: "100%", height: "100%", backgroundColor: "black"}}>
            <View style={{width: "100%", height: "100%", alignItems: "center",}}>

                <Pressable style={{height: "70%", width: "100%", alignItems: "center", justifyContent: "center"}} >
                <Image source={{uri: server + `media/` + otherProfile.image}}
                style={{width:window.width * .75, height: window.width* .75, borderRadius: 360}}
                />
                <Text style={[{color: "white", fontSize: 40}, otherProfile.cord == null && {borderWidth: 10, borderColor: "green", padding: "10%", borderRadius: 50}]}>{other}</Text>
                <Text style={{color: "white", fontSize: 40, marginTop: "2%"}}>{otherProfile.name}</Text>
                <Text style={{color: "white", fontSize: 40, textAlign: "center", marginTop: "5%"}}>{otherProfile.country}{FLAGS[otherProfile.country]}</Text>            
                </Pressable>

        {otherProfile.cord != null ?
                <MapView style={{width: "100%", height: "30%"}} scrollEnabled={false}
                initialRegion={{
                    latitude: otherProfile.cord != null ? otherProfile.cord.latitude : 100,
                    longitude:  otherProfile.cord != null ? otherProfile.cord.longitude : 0,
                    latitudeDelta: 1.0922,
                    longitudeDelta: 1.0421,
                  }}
                >
                    <Marker 
                    coordinate={{
                    latitude: otherProfile.cord != null ? otherProfile.cord.latitude : 0,
                    longitude:  otherProfile.cord != null ? otherProfile.cord.longitude : 0,}}>

                    </Marker>
                </MapView>
                :
                <View >

                </View>
}
            </View>     
        </View>
    )
}